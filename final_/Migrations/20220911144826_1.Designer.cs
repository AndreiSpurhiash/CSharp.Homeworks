// <auto-generated />
using System;
using Final_project.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Final_project.Migrations
{
    [DbContext(typeof(SushinContext))]
    [Migration("20220911144826_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Final_project.Domain.Entity.Client", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<string>("_AdresClient")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("text")
                        .HasColumnName("Adres");

                    b.Property<string>("_MailClient")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("_NameClient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("_NumberPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("text")
                        .HasColumnName("Phone");

                    b.HasKey("Guid")
                        .HasName("Id1");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Final_project.Domain.Entity.Order", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<Guid?>("ClientGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("_DateOrder")
                        .HasColumnType("timestamp")
                        .HasColumnName("DateOrder");

                    b.Property<decimal>("_Price")
                        .HasColumnType("numeric")
                        .HasColumnName("Price");

                    b.HasKey("Guid")
                        .HasName("Id2");

                    b.HasIndex("ClientGuid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Final_project.Domain.Entity.Sushi", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<Guid?>("OrderGuid")
                        .HasColumnType("uuid");

                    b.Property<decimal>("_Coast")
                        .HasColumnType("numeric(38,17)")
                        .HasColumnName("Coast");

                    b.Property<string>("_Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<string>("_Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("_Number")
                        .HasColumnType("int")
                        .HasColumnName("Number");

                    b.HasKey("Guid")
                        .HasName("Key");

                    b.HasIndex("OrderGuid");

                    b.ToTable("Sushi");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("200cad8d-30ce-4cf1-9b28-1bbd9bf1f677"),
                            _Coast = 1.2m,
                            _Description = "Ломтики кремообразного авокадо отлично сочетаются со свежесмолотым черным перцем",
                            _Name = "Суши с авокадо(Авокадо Нигири)",
                            _Number = 1
                        },
                        new
                        {
                            Guid = new Guid("05a6dd27-d6c2-433e-9152-157814f300e4"),
                            _Coast = 1.5m,
                            _Description = "Гребешок морской, рис, васаби",
                            _Name = "Суши с гребешком (Хотатэгай Нигири)",
                            _Number = 2
                        },
                        new
                        {
                            Guid = new Guid("2fc84f56-8f62-4c00-8357-01eb035f9a59"),
                            _Coast = 2.5m,
                            _Description = "Лосось копченый, рис, васаби",
                            _Name = "Суши с копченым лососем (Сяке гурме Нигири)",
                            _Number = 3
                        },
                        new
                        {
                            Guid = new Guid("cb4bac95-d156-4892-8d87-838ecb12d8f9"),
                            _Coast = 3.5m,
                            _Description = "Суши нигири с желтохвостой лакедрой, богатой жирными кислотами и полезными микроэлементами",
                            _Name = "Суши с лакедрой желтохвостой (Хамачи Нигири)",
                            _Number = 4
                        },
                        new
                        {
                            Guid = new Guid("60425da9-1adf-424c-9aa3-688f109ceea3"),
                            _Coast = 1.9m,
                            _Description = "Ролл с лососем, сливочным сыром и огурцом в оранжевой икре капеллана Масаго",
                            _Name = "Суши с лососем (Сяке Нигири)",
                            _Number = 5
                        },
                        new
                        {
                            Guid = new Guid("2fcb5494-87b0-4500-98ff-0cc918582855"),
                            _Coast = 4.6m,
                            _Description = "Лепные суши с моллюском хоккигаем",
                            _Name = "Суши с моллюском Хоккигай (Хоккигай Нигири)",
                            _Number = 6
                        },
                        new
                        {
                            Guid = new Guid("523d9a4f-ab3d-45a6-9170-6064f11049b4"),
                            _Coast = 2.1m,
                            _Description = "Острые суши гункан с морским окунем, приправленные специальным острым соусом спайси",
                            _Name = "Суши с окунем (Идзуми тай Нигири)",
                            _Number = 7
                        },
                        new
                        {
                            Guid = new Guid("2582711a-c868-49fe-b06c-6cdc27d1367a"),
                            _Coast = 2.2m,
                            _Description = "Суши нигири со специальным японским слоистым омлетом тамаго, приправленным соусом унаги",
                            _Name = "Суши с омлетом (Тамаго Нигири)",
                            _Number = 8
                        },
                        new
                        {
                            Guid = new Guid("6370737d-be92-41b2-9f5e-165392093877"),
                            _Coast = 4.9m,
                            _Description = "Острые суши гункан с мясом осьминога, приправленным специальным острым соусом спайси",
                            _Name = "Суши с осьминогом (Тако Нигири)",
                            _Number = 9
                        },
                        new
                        {
                            Guid = new Guid("f346d9d7-c269-45c2-a953-f8b9a5119373"),
                            _Coast = 3m,
                            _Description = "Запеченые острые суши с крупной креветкой, под икорно-сырным острым соусом",
                            _Name = "Суши с тигровой креветкой (Эби Нигири)",
                            _Number = 10
                        },
                        new
                        {
                            Guid = new Guid("371c4ae8-3234-42d3-9f2c-e1e5a2cc2d0e"),
                            _Coast = 3m,
                            _Description = "Запеченые острые суши с крупной креветкой, под икорно-сырным острым соусом",
                            _Name = "Суши с тигровой креветкой (Эби Нигири)",
                            _Number = 11
                        },
                        new
                        {
                            Guid = new Guid("5bd351b7-4f5f-46f6-ad7b-7d5d466fb81f"),
                            _Coast = 3.1m,
                            _Description = "Оригинальный ролл с тунцом, японским омлетом, помидором и майонезом в оранжевой икре",
                            _Name = "Суши с тунцом (Магуро Нигири)",
                            _Number = 12
                        },
                        new
                        {
                            Guid = new Guid("b56adb28-7f5b-4d55-8e7c-fb5d7c68dfc1"),
                            _Coast = 3.9m,
                            _Description = "Суши гункан с нарезанным мясом крупной креветки, приправленным специальным сладким соусом",
                            _Name = "Суши со сладкой креветкой (Ама Эби Нигири)",
                            _Number = 13
                        },
                        new
                        {
                            Guid = new Guid("f0181d59-9277-41dd-8842-a2f15fdbc46a"),
                            _Coast = 3.3m,
                            _Description = "Суши гункан, заполненные икрой тобико летучей рыбы",
                            _Name = "Суши с икрой летучей рыбы в огурце",
                            _Number = 14
                        },
                        new
                        {
                            Guid = new Guid("fb6d40f1-169f-4f74-889d-cf11ea2a0a08"),
                            _Coast = 4.2m,
                            _Description = "Запеченые острые суши с мидиями в огурце, под икорно сырным острым соусом",
                            _Name = "Суши с мидиями в огурце",
                            _Number = 15
                        },
                        new
                        {
                            Guid = new Guid("f349672f-89c7-4431-a515-67cec6244a8e"),
                            _Coast = 3.5m,
                            _Description = "Суши гункан, заполненные салатом из морских водорослей вакамэ, приправленным орехово-кунжутным соусом",
                            _Name = "Суши с салатными креветками в огурце",
                            _Number = 16
                        },
                        new
                        {
                            Guid = new Guid("2fdcccf9-fa85-4b31-908c-c0bf1b657bae"),
                            _Coast = 3.6m,
                            _Description = "Любимый ролл японского водяного Каппа - ролл с огурцом цыпленком и кунжутом",
                            _Name = "Суши с цыпленком в огурце",
                            _Number = 17
                        },
                        new
                        {
                            Guid = new Guid("11799502-e8d0-4bd3-bf46-582d9d4991a3"),
                            _Coast = 4m,
                            _Description = "Гребешок, огурец, тобико, творожный сыр",
                            _Name = "Ролл Урамаки Острый гребешок",
                            _Number = 18
                        },
                        new
                        {
                            Guid = new Guid("7224e2af-84f1-4fe9-8cae-15ebf24d17bf"),
                            _Coast = 4.9m,
                            _Description = "Ролл с кальмаром, японским омлетом, икрой летучей рыбы и стружкой тунца",
                            _Name = "Ролл Урамаки Острый кальмар",
                            _Number = 19
                        },
                        new
                        {
                            Guid = new Guid("2f96afad-642f-4755-a027-c1f4939e3247"),
                            _Coast = 4.2m,
                            _Description = "Рис, нори, угорь, огурец, лосось, кимчи соус, лук зелёный",
                            _Name = "Ролл Урамаки Острый копченый угорь",
                            _Number = 20
                        },
                        new
                        {
                            Guid = new Guid("f5be59b3-76e7-4360-88ad-f670a45e2690"),
                            _Coast = 4.3m,
                            _Description = "Теплый ролл с окунем, огурцом и соусом спайс",
                            _Name = "Ролл Урамаки Острый морской окунь",
                            _Number = 21
                        },
                        new
                        {
                            Guid = new Guid("67cc068b-a558-43a7-b31b-09ba363be7ac"),
                            _Coast = 4.4m,
                            _Description = "Ролл с окунем, японским омлетом, икрой летучей рыбы и стружкой тунца",
                            _Name = "Ролл Урамаки Острый тунец",
                            _Number = 22
                        },
                        new
                        {
                            Guid = new Guid("238b7b12-fcf9-4dfe-9d36-ae0cd7b95951"),
                            _Coast = 4.5m,
                            _Description = "Оригинальный ролл, необычное сочетание копченой курицы и бекона со свежими овощами и спайси-соусом",
                            _Name = "Ролл Урамаки Острый цыпленок",
                            _Number = 23
                        },
                        new
                        {
                            Guid = new Guid("c69eb94e-5c13-4af1-a565-7121e8ca3979"),
                            _Coast = 5.9m,
                            _Description = "Аппетитный запеченный ролл с салатным крабом, огурцом и сыром сливочным, под шапкой и соуса спайс",
                            _Name = "Запеченный ролл Калифорния с крабом",
                            _Number = 24
                        },
                        new
                        {
                            Guid = new Guid("1ba046b7-e060-4a43-a8d3-b17e3e7363b5"),
                            _Coast = 5.9m,
                            _Description = "Аппетитный запеченный ролл с нежным лососем, огурцом и сыром сливочным, под шапкой и майонеза",
                            _Name = "Запеченный ролл Калифорния с лососем",
                            _Number = 25
                        },
                        new
                        {
                            Guid = new Guid("2fc5a3ff-4bb4-4acb-928a-6b3cef804c79"),
                            _Coast = 5.2m,
                            _Description = "Аппетитный запечённый ролл с копчёным угрём, японским омлетом, огурцом, мидиями, майонезом, икрой капеллана и сыром Пармезан",
                            _Name = "Запеченный ролл с копченым угрем и омлетом",
                            _Number = 26
                        },
                        new
                        {
                            Guid = new Guid("2db1b137-0456-49a6-b944-ab2a91d86e06"),
                            _Coast = 5.3m,
                            _Description = "Рис, нори, лосось, гребешок, крем-сыр, авокадо, спайси соус, унаги соус",
                            _Name = "Запеченный ролл с острым гребешком",
                            _Number = 27
                        },
                        new
                        {
                            Guid = new Guid("100e07de-b974-48db-880b-d89d2a7a9868"),
                            _Coast = 5.4m,
                            _Description = "Кальмар, фирменная сырная шапка, соус Унаги, кунжут, рис, нори",
                            _Name = "Запеченный ролл с острым кальмаром",
                            _Number = 28
                        },
                        new
                        {
                            Guid = new Guid("c40ef5ac-9a58-4a89-b71a-b2b9dae96fc6"),
                            _Coast = 5.5m,
                            _Description = "Жгучий запеченный ролл с омлетом и творожным сыром под шапочкой из нежного лосося в остром соусе",
                            _Name = "Запеченный ролл с острым лососем",
                            _Number = 29
                        },
                        new
                        {
                            Guid = new Guid("2fc12007-bd66-4049-b18a-c4bcd30afee0"),
                            _Coast = 5.5m,
                            _Description = "Рис, водоросли нори, авокадо, огурец, сыр творожный, тунец, соус спайси, кунжут жареный, зелень, сыр пармезан, соус калифорния",
                            _Name = "Запеченный ролл с острым тунцом",
                            _Number = 30
                        });
                });

            modelBuilder.Entity("Final_project.Domain.Entity.Order", b =>
                {
                    b.HasOne("Final_project.Domain.Entity.Client", "Client")
                        .WithMany("Order")
                        .HasForeignKey("ClientGuid");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Final_project.Domain.Entity.Sushi", b =>
                {
                    b.HasOne("Final_project.Domain.Entity.Order", "Order")
                        .WithMany("Sushi")
                        .HasForeignKey("OrderGuid");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Final_project.Domain.Entity.Client", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("Final_project.Domain.Entity.Order", b =>
                {
                    b.Navigation("Sushi");
                });
#pragma warning restore 612, 618
        }
    }
}
